package com.quizhub.quizhub.controller;

import com.quizhub.quizhub.model.Quiz;
import com.quizhub.quizhub.service.QuizService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/quizzes")
public class QuizController {

    private final QuizService quizService;

    public QuizController(QuizService quizService) {
        this.quizService = quizService;
    }

    // Create a new quiz
    @PostMapping("/create")
    public ResponseEntity<Quiz> createQuiz(@RequestBody Quiz quiz) {
        Quiz createdQuiz = quizService.saveQuiz(quiz);
        return new ResponseEntity<>(createdQuiz, HttpStatus.CREATED);
    }

    // Get all quizzes generated by a specific user
    @GetMapping("/user/{userId}")
    public ResponseEntity<List<Quiz>> getQuizzesByUser(@PathVariable Long userId) {
        List<Quiz> quizzes = quizService.getQuizzesByUser(userId);
        return ResponseEntity.ok(quizzes);
    }

    // Get a specific quiz by its ID and user ID
    @GetMapping("/{id}/user/{userId}")
    public ResponseEntity<Quiz> getQuizByIdAndUser(@PathVariable Long id, @PathVariable Long userId) {
        Optional<Quiz> quizOpt = quizService.getQuizByIdAndUser(id, userId);
        return quizOpt.map(ResponseEntity::ok)
                .orElseGet(() -> ResponseEntity.notFound().build());
    }

    // Delete a quiz by its ID
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteQuiz(@PathVariable Long id) {
        quizService.deleteQuiz(id);
        return ResponseEntity.noContent().build();
    }
}
